{**
 * This file is part of the Grido (http://grido.bugyik.cz)
 *
 * Copyright (c) 2011 Petr BugyÃ­k (http://petr.bugyik.cz)
 *
 * For the full copyright and license information, please view
 * the file LICENSE.md that was distributed with this source code.
 *}

{extends default.latte}

{block customization}
    {?
        /* TWITTER BOOTSTRAP 2/3 */
        $customization->buttonClass = 'btn btn-default btn-xs btn-mini';
        $customization->iconClass = ['glyphicon', 'fa'];

        $form->elementPrototype->class[] = 'table-responsive';
        $control->tablePrototype->class[] = 'table table-striped table-hover';

        $form[count]->controlPrototype->class[] = 'form-control';
        $form[buttons][search]->controlPrototype->class[] = 'btn btn-default btn-sm search';
        $form[buttons][reset]->controlPrototype->class[] = 'btn btn-default btn-sm reset';

        if ($control->hasOperation()) {
            $form[operations][operations]->controlPrototype->class[] = 'form-control';
        }
    }

    {foreach $formFilters as $filter}
        {? $filter->controlPrototype->class[] = 'form-control'}
    {/foreach}

    {foreach $actions as $action}
        {?
            $element = $action->elementPrototype;
            $element->class[] = $customization->buttonClass;

            if ($icon = $action->getOption('icon')) {
                $element->setText(' ' . $action->getLabel());
                $element->insert(0, \Nette\Utils\Html::el('i')->setClass($customization->getIconClass($icon)));
            }
        }
    {/foreach}
{/block}
